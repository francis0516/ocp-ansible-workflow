---
- name: Create a VM on OpenShift Virtualization
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    vm_name: apache-vm
    vm_project: vm-migration-test
    storage_class: nfs-storage-class
    storage_size: 15Gi
    memory_size: 2Gi
    cpu_cores: 2
    cpu_sockets: 1
    cpu_threads: 1
    cloud_init_password: password
    ssh_timeout: 300
    network_attachment: br-ex-network
    ip_wait_time: 30

  tasks:
    - name: Display VM configuration
      debug:
        msg:
          - "Creating VM: {{ vm_name }}"
          - "Namespace: {{ vm_project }}"
          - "Memory: {{ memory_size }}"
          - "CPU Cores: {{ cpu_cores }}"
          - "Storage Class: {{ storage_class }}"
          - "Network: {{ network_attachment }}"

    - name: Provision Virtual Machine in OpenShift
      community.kubevirt.kubevirt_vm:
        namespace: "{{ vm_project }}"
        name: "{{ vm_name }}"
        state: present
        running: true
        template:
          metadata:
            labels:
              app: "{{ vm_name }}"
          spec:
            domain:
              cpu:
                cores: "{{ cpu_cores }}"
                sockets: "{{ cpu_sockets }}"
                threads: "{{ cpu_threads }}"
              memory:
                guest: "{{ memory_size }}"
              devices:
                disks:
                  - name: rootdisk
                    disk:
                      bus: virtio
                  - name: cloudinitdisk
                    disk:
                      bus: virtio
                interfaces:
                  - name: default
                    bridge: {}
            networks:
              - name: default
                multus:
                  networkName: "{{ network_attachment }}"
            volumes:
              - name: rootdisk
                dataVolume:
                  name: "{{ vm_name }}"
              - name: cloudinitdisk
                cloudInitNoCloud:
                  networkData: |-
                    version: 2
                    ethernets:
                      eth0:
                        dhcp4: true
                        dhcp6: false   # Disable IPv6
                        dhcp4-overrides:
                          use-dns: true
                  userData: |-
                    #cloud-config
                    user: root
                    password: {{ cloud_init_password }}
                    chpasswd: { expire: False }
                    ssh_pwauth: True
                    runcmd:
                      - sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
                      - sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
                      - systemctl restart sshd
                      - systemctl enable sshd
      register: vm_creation

    - name: Display VM creation result
      debug:
        msg: "VM {{ vm_name }} provisioned successfully in namespace {{ vm_project }}"
      when: vm_creation.changed

    - name: Wait for VM network interfaces to be ready
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        name: "{{ vm_name }}"
        namespace: "{{ vm_project }}"
        validate_certs: no
      register: vmi_network_info
      until:
        - vmi_network_info.resources is defined
        - vmi_network_info.resources | length > 0
        - vmi_network_info.resources[0].status.interfaces is defined
        - vmi_network_info.resources[0].status.interfaces | length > 0
        - vmi_network_info.resources[0].status.interfaces[0].ipAddress is defined
      retries: 30
      delay: 10

    - name: Extract IPv4 address only
      set_fact:
        vm_ipv4_addresses: "{{ vmi_network_info.resources[0].status.interfaces | map(attribute='ipAddress') | select('match', '^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$') | list }}"
        vm_ip: "{{ vm_ipv4_addresses[0] | default('Not assigned yet') }}"

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ vm_ip }}"
        port: 22
        delay: 10
        timeout: "{{ ssh_timeout }}"
        state: started
      vars:
        ansible_ssh_common_args: '-o AddressFamily=inet'
      when: vm_ip != 'Not assigned yet'

    - name: Display SSH availability
      debug:
        msg: "âœ“ SSH is now available on {{ vm_ip }}:22"
      when:
        - vm_ip != 'Not assigned yet'

    - name: Pass VM IP to next workflow job
      set_stats:
        data:
          vm_ip: "{{ vm_ip }}"
          vm_ipv4: "{{ vm_ipv4_addresses | default([]) | join(',') }}"
          vm_name: "{{ vm_name }}"
          vm_project: "{{ vm_project }}"
        per_host: no

    - name: Deployment Summary
      debug:
        msg:
          - "======================================"
          - "VM Deployment Complete Successfully!"
          - "======================================"
          - "VM Name: {{ vm_name }}"
          - "IPv4 Address(es): {{ vm_ipv4_addresses | default(['None']) | join(', ') }}"
          - "SSH Access: ssh root@{{ vm_ip }}"
          - "Username: root"
          - "Password: {{ cloud_init_password }}"
          - "Network: {{ network_attachment }}"
          - "=========================================="
      when: vm_ip != 'Not assigned yet'
