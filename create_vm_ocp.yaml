---
- name: Deploy VM on OpenShift Virtualization
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    vm_name: apache-vm
    vm_project: vm-migration-test
    storage_class: nfs-storage-class
    storage_size: 15Gi
    memory_size: 2Gi
    cpu_cores: 2
    cpu_sockets: 1
    cpu_threads: 1
    cloud_init_password: password
    ssh_timeout: 300
    network_attachment: br-ex-network
    ip_wait_time: 30

  tasks:
    - name: Provision VM in OpenShift
      community.kubevirt.kubevirt_vm:
        namespace: "{{ vm_project }}"
        name: "{{ vm_name }}"
        state: present
        running: true
        template:
          metadata:
            labels:
              app: "{{ vm_name }}"
          spec:
            domain:
              cpu:
                cores: "{{ cpu_cores }}"
                sockets: "{{ cpu_sockets }}"
                threads: "{{ cpu_threads }}"
              memory:
                guest: "{{ memory_size }}"
              devices:
                disks:
                  - name: rootdisk
                    disk:
                      bus: virtio
                  - name: cloudinitdisk
                    disk:
                      bus: virtio
                interfaces:
                  - name: default
                    bridge: {}
            networks:
              - name: default
                multus:
                  networkName: "{{ network_attachment }}"
            volumes:
              - name: rootdisk
                dataVolume:
                  name: "{{ vm_name }}"
              - name: cloudinitdisk
                cloudInitNoCloud:
                  networkData: |-
                    version: 2
                    ethernets:
                      eth0:
                        dhcp4: true
                        dhcp6: false
                        dhcp4-overrides:
                          use-dns: true
                  userData: |-
                    #cloud-config
                    user: root
                    password: {{ cloud_init_password }}
                    chpasswd: { expire: False }
                    ssh_pwauth: True
                    runcmd:
                      - sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
                      - sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
                      - systemctl restart sshd
                      - systemctl enable sshd
      register: vm_creation

    - name: Wait for VM network interface and extract IPv4
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        name: "{{ vm_name }}"
        namespace: "{{ vm_project }}"
        validate_certs: no
      register: vmi_info
      until:
        - vmi_info.resources is defined
        - vmi_info.resources | length > 0
        - vmi_info.resources[0].status.interfaces is defined
        - vmi_info.resources[0].status.interfaces[0].ipAddress is defined
      retries: 30
      delay: 10

    - name: Set IPv4-only variable
      set_fact:
        vm_ip: "{{ vmi_info.resources[0].status.interfaces[0].ipAddress | regex_search('^([0-9]{1,3}\\.){3}[0-9]{1,3}', '\\0') }}"

    - name: Pass VM IP to workflow
      set_stats:
        data:
          vm_ip: "{{ vm_ip }}"
          vm_name: "{{ vm_name }}"
          vm_project: "{{ vm_project }}"
        per_host: no
