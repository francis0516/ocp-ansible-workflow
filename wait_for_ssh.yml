- name: Wait for VM to report IPv4
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    ssh_timeout: 300
    vm_password: "{{ cloud_init_password | default('password') }}"
    max_ip_wait: 300
    ip_poll_interval: 10
    ansible_ssh_common_args: '-o AddressFamily=inet -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

  tasks:
    - name: Poll VM until it has an IPv4 address
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        namespace: "{{ vm_project }}"
        name: "{{ vm_name }}"
        validate_certs: no
      register: vmi_info
      until:
        - vmi_info.resources is defined
        - vmi_info.resources | length > 0
        - vmi_info.resources[0].status.interfaces is defined
        - vmi_info.resources[0].status.interfaces[0].ipAddress is defined
      retries: "{{ (max_ip_wait // ip_poll_interval) | int }}"
      delay: "{{ ip_poll_interval }}"

    - name: Extract IPv4
      set_fact:
        vm_ip: "{{ vmi_info.resources[0].status.interfaces[0].ipAddress | regex_search('^([0-9]{1,3}\\.){3}[0-9]{1,3}', '\\0') }}"

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ vm_ip }}"
        port: 22
        delay: 10
        timeout: "{{ ssh_timeout }}"
        state: started
      vars:
        ansible_ssh_common_args: "{{ ansible_ssh_common_args }}"

    - name: Add VM to in-memory inventory
      add_host:
        name: "target_vm_host"
        ansible_host: "{{ vm_ip }}"
        ansible_user: root
        ansible_password: "{{ vm_password }}"
        ansible_ssh_common_args: "{{ ansible_ssh_common_args }}"
        groups: vms

    - name: Display inventory addition
      debug:
        msg: "VM {{ vm_name }} ({{ vm_ip }}) added to group 'vms'"
