---
- name: Wait for VM to have IPv4 and SSH readiness
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    vm_project: "vm-migration-test"
    vm_name: "apache-vm"
    cloud_init_password: "password"
    max_ip_wait: 300
    ip_poll_interval: 10
    ssh_timeout: 300
    ansible_ssh_common_args: '-o AddressFamily=inet -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

  tasks:

    - name: Get VM interface info until IPv4 is available
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        namespace: "{{ vm_project }}"
        name: "{{ vm_name }}"
        validate_certs: no
      register: vmi_info
      until: >
        vmi_info.resources is defined and
        vmi_info.resources | length > 0 and
        vmi_info.resources[0].status.interfaces is defined and
        vmi_info.resources[0].status.interfaces[0].ipAddress is defined
      retries: "{{ (max_ip_wait // ip_poll_interval) | int }}"
      delay: "{{ ip_poll_interval }}"

    - name: Extract IPv4 from VM info
      set_fact:
        vm_ip: "{{ vmi_info.resources[0].status.interfaces[0].ipAddress
                   | regex_search('^([0-9]{1,3}\\.){3}[0-9]{1,3}', '\\0') }}"

    - name: Wait for SSH port 22 to be available on the VM
      wait_for:
        host: "{{ vm_ip }}"
        port: 22
        timeout: "{{ ssh_timeout }}"
        state: started

    - name: Add VM to dynamic in-memory inventory
      add_host:
        name: "target_vm_host"
        ansible_host: "{{ vm_ip }}"
        ansible_user: root
        ansible_password: "{{ cloud_init_password }}"
        ansible_ssh_common_args: "{{ ansible_ssh_common_args }}"
        groups: vms

    - name: Display VM connectivity summary
      debug:
        msg:
          - "✅ VM {{ vm_name }} IPv4 detected: {{ vm_ip }}"
          - "✅ SSH port 22 is reachable on {{ vm_ip }}"
          - "✅ VM added to dynamic group 'vms' for further tasks"
